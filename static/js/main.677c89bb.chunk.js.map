{"version":3,"sources":["api/todos.ts","api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","title","completed","userId","name","username","email","UserInfo","user","className","href","TodoInfo","todo","cn","TodoList","todos","map","usersFromServer","find","App","useState","setTitle","setUserId","todosFromServer","setTodo","hasTitlError","setHasTitleError","hasUserError","setHasUserError","touched","setTouched","handleBlur","trim","action","method","onSubmit","event","preventDefault","newTodo","currentTodos","addTodo","Math","max","t","htmlFor","type","value","onChange","newValue","target","onBlur","placeholder","selectedValue","required","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.677c89bb.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  if (!user) {\n    return null;\n  }\n\n  const { name, email, id } = user;\n\n  return (\n    <a key={id} className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../Todo';\nimport { User } from '../User';\n\ntype Props = {\n  user: User\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ user, todo }) => {\n  const { title, id, completed } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport usersFromServer from '../../api/users';\n\ntype Props = {\n  todos: {\n    id: number\n    title: string\n    completed: boolean\n    userId: number\n  }[],\n};\n\nconst findUserById = (userId: number) => {\n  return usersFromServer.find((user) => user.id === userId);\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {\n        todos.map((todo) => {\n          const user = findUserById(todo.userId);\n\n          return (user) && (\n            <TodoInfo\n              key={todo.id}\n              user={user}\n              todo={todo}\n            />\n          );\n        })\n      }\n    </section>\n  );\n};\n","import { useState } from 'react';\n\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './components/Todo';\n\nexport const App = () => {\n  const [title, setTitle] = useState<string>('');\n  const [userId, setUserId] = useState<number>(0);\n  const [todo, setTodo] = useState<Todo[]>(todosFromServer);\n  const [hasTitlError, setHasTitleError] = useState<boolean>(false);\n  const [hasUserError, setHasUserError] = useState<boolean>(false);\n  const [touched, setTouched] = useState<boolean>(false);\n\n  const handleBlur = () => {\n    setTouched(true);\n\n    if (!title.trim()) {\n      setHasTitleError(true);\n    } else {\n      setHasTitleError(false);\n    }\n\n    if (userId === 0) {\n      setHasUserError(true);\n    } else {\n      setHasUserError(false);\n    }\n  };\n\n  const addTodo = (newTodo: Todo) => {\n    setTodo(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  const handleUserSelectChange\n    = (event: React.ChangeEvent<HTMLSelectElement>) => {\n      const selectedValue: number = +event.target.value;\n\n      if (selectedValue) {\n        setUserId(selectedValue);\n        setHasUserError(false);\n      } else {\n        setHasUserError(true);\n      }\n    };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue: string = event.target.value;\n\n    setTitle(newValue);\n\n    setHasTitleError(newValue.trim() === '');\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!userId || title.trim() === '') {\n      setHasUserError(!userId);\n      setHasTitleError(title.trim() === '');\n      setTouched(true);\n\n      return;\n    }\n\n    const maxId = Math.max(...todo.map((t) => t.id));\n    const newTodo: Todo = {\n      id: maxId + 1,\n      title,\n      completed: false,\n      userId,\n    };\n\n    addTodo(newTodo);\n\n    setTitle('');\n    setUserId(0);\n    setHasUserError(false);\n    setHasTitleError(false);\n    setTouched(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"title\">\n            Title:\n          </label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleTitleChange}\n            onBlur={handleBlur}\n            placeholder=\"Enter a title\"\n          />\n          {hasTitlError\n            && touched\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"name\">\n            User:\n          </label>\n          <select\n            id=\"name\"\n            value={userId}\n            onChange={handleUserSelectChange}\n            onBlur={handleBlur}\n            data-cy=\"userSelect\"\n            required\n          >\n            <option value=\"0\">Choose a user</option>\n            {usersFromServer.map((user) => {\n              const { id, name } = user;\n\n              return (\n                <option\n                  value={id}\n                  key={id}\n                >\n                  {name}\n                </option>\n\n              );\n            })}\n          </select>\n\n          {hasUserError\n            && touched\n            && <span className=\"error\">Please choose a user</span>}\n\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={todo}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}